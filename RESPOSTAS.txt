1) Explique a função dos Sistemas de Arquivos. Adicionalmente, descreva a diferença entre o sistema de arquivos do linux e do windows.
É a parte do sistema operacional que lida com os arquivos. Ele fica responsável pela organização dos arquivos no disco, estrutura, forma de acesso, uso e como deve ser nomeado os arquivos.
No Windows 95, é usado o FAT16, o Windows 98 introduziu o FAT32 e os sistemas Windows após isso passaram a usar o NTFS, dando suporte ao FAT. O exFAT é uma extensão do FAT32 otimizado para flash drivers e sistemas de arquivos grandes quando o sistema de arquivos NTFS não for uma solução viável.
No Linux, há mais sistemas de arquivos, os mais usados são EXT3 e EXT4, outros exemplos são ReiserFS, XFS e JSF.

O Windows utiliza as extensões como forma de saber a qual programa deve executá-lo, enquanto outros, como o Linux, não obriga a necessidade de uma extensão, podendo ser usada pela demanda do usuário.
Em relação a caracteres:
Os sistemas FAT não são case sensitive, sendo que o FAT-16 suporta nomes de até 8 caracteres mais extensão de 1 a 3 caracteres e o FAT-32 suporta nomes de até 256 bits.
O NTFS utiliza caracteres Unicode, diferentemente do FAT que usa ASCII, apresenta suporte a criptografia e segurança.
O ext4 apresenta compatibilidade com o ext3 e também apresenta novos recursos de confiabilidade e desempenho, como a utilização de estruturas mais rápidas na organização de diretórios e redução de fragmentação de arquivos.


2) Existem quatro tipos de problemas que podem ocorrer na execução de processos concorrentes: trancamento (lockout), impasse (deadlock), inanição (starvation) e indeterminismo. Explique cada um deles dando exemplos de situações onde podem ocorrer.
Trancamento (lockout): quando vários processos aguardam um evento (liberar um recurso ocupado), reduzindo o desempenho. Um exemplo seria a fila de impressão com muitos processos nela esperando;
Impasse(deadlock): quando um conjunto de processos aguardam uma ação que somente outro processo do conjunto pode causar. Um exemplo seria quando o processo de um conjunto aguarda que o outro libere recurso para que possa ser executado, porém, como todos estão esperando recursos, nenhum será executado e causará impasse;
Inanição(starvation): quando um processo nunca executará devido a política de compartilhamento de recursos do sistema operacional. Um exemplo seria uma política que escolhe oferecer recurso para processos com menos exigência desse recurso, caso um processo exija bastante recurso, é possível que ele não seja executado devido a política;
Indeterminismo: quando o não conhecimento da ordem de acesso a um recurso compartilhado gera resultados não esperado. Isso pode acontecer quando threads tentam acessar um recurso compartilhado em que uma está alterando uma variável antes de ser lida pela outra gerando resultado não desejado.


Referências: livro do Tanembaun
https://www.techtudo.com.br/dicas-e-tutoriais/noticia/2016/02/entenda-o-que-e-sistema-de-arquivos-e-sua-utilidade-no-pc-e-no-celular.html
https://pt.wikipedia.org/wiki/ExFAT
https://pt.wikipedia.org/wiki/File_Allocation_Table
https://pt.wikipedia.org/wiki/NTFS
https://www.ibm.com/developerworks/br/library/l-anatomy-ext4/index.html
derekmolloy.ie/writing-a-linux-kernel-module-part-2-a-character-device/
